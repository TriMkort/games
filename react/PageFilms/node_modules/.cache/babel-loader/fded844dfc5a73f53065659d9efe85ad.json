{"ast":null,"code":"var _jsxFileName = \"c:\\\\xampp\\\\htdocs\\\\curso react\\\\REACT\\\\react\\\\06-proyecto1\\\\src\\\\componets\\\\Listado.js\";\nimport React, { useEffect, useState } from 'react';\nconst Listado = ({\n  listadoState,\n  setListadoState\n}) => {\n  // const [listadoState, setListadoState] = useState([]);\n\n  useEffect(() => {\n    console.log(\"Componente del listado cargado\");\n    conseguirPeliculas();\n  }, []);\n  const conseguirPeliculas = () => {\n    let peliculas = JSON.parse(localStorage.getItem(\"pelis\"));\n    setListadoState(peliculas);\n  };\n  const borrarPeli = id => {\n    alert(\"Borrando pelicula: \" + id);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, listadoState != null ? listadoState.map(peli => {\n    return /*#__PURE__*/React.createElement(\"article\", {\n      className: \"peli-item\",\n      key: peli.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 33\n      }\n    }, peli.titulo), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 33\n      }\n    }, peli.descripcion), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }\n    }, \"Editar\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: () => borrarPeli(peli.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }\n    }, \"Borrar\"));\n  }) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 22\n    }\n  }, \"No hay peliculas para mostrar\")));\n};\nexport default Listado;","map":{"version":3,"names":["React","useEffect","useState","Listado","listadoState","setListadoState","console","log","conseguirPeliculas","peliculas","JSON","parse","localStorage","getItem","borrarPeli","id","alert","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","map","peli","key","titulo","descripcion","onClick"],"sources":["c:/xampp/htdocs/curso react/REACT/react/06-proyecto1/src/componets/Listado.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst Listado = ({listadoState, setListadoState}) => {\r\n\r\n    // const [listadoState, setListadoState] = useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"Componente del listado cargado\");\r\n        conseguirPeliculas();\r\n\r\n    },[]);\r\n\r\n    const conseguirPeliculas = () => {\r\n        let peliculas = JSON.parse(localStorage.getItem(\"pelis\"));\r\n        setListadoState(peliculas);\r\n    }\r\n    \r\n    const borrarPeli = (id) =>{\r\n        alert(\"Borrando pelicula: \" + id);\r\n    }\r\n    return (\r\n        <div className='content'>\r\n            <>\r\n                {listadoState != null ? \r\n                        listadoState.map (peli => {\r\n                        return (\r\n                            <article className=\"peli-item\" key={peli.id}>\r\n                                <h3 className=\"title\">{peli.titulo}</h3>\r\n                                <p className=\"description\">{peli.descripcion}</p>\r\n                                <button className=\"edit\">Editar</button>\r\n                                <button className=\"delete\" onClick={() => borrarPeli(peli.id)}>Borrar</button>\r\n                            </article>\r\n                        );\r\n                    })\r\n                    :<h2>No hay peliculas para mostrar</h2>\r\n                } \r\n            </>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Listado\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,MAAMC,OAAO,GAAGA,CAAC;EAACC,YAAY;EAAEC;AAAe,CAAC,KAAK;EAEjD;;EAEAJ,SAAS,CAAC,MAAM;IACZK,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7CC,kBAAkB,CAAC,CAAC;EAExB,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMA,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAIC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IACzDR,eAAe,CAACI,SAAS,CAAC;EAC9B,CAAC;EAED,MAAMK,UAAU,GAAIC,EAAE,IAAI;IACtBC,KAAK,CAAC,qBAAqB,GAAGD,EAAE,CAAC;EACrC,CAAC;EACD,oBACIf,KAAA,CAAAiB,aAAA;IAAKC,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpBxB,KAAA,CAAAiB,aAAA,CAAAjB,KAAA,CAAAyB,QAAA,QACKrB,YAAY,IAAI,IAAI,GACbA,YAAY,CAACsB,GAAG,CAAEC,IAAI,IAAI;IAC1B,oBACI3B,KAAA,CAAAiB,aAAA;MAASC,SAAS,EAAC,WAAW;MAACU,GAAG,EAAED,IAAI,CAACZ,EAAG;MAAAI,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACxCxB,KAAA,CAAAiB,aAAA;MAAIC,SAAS,EAAC,OAAO;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEG,IAAI,CAACE,MAAW,CAAC,eACxC7B,KAAA,CAAAiB,aAAA;MAAGC,SAAS,EAAC,aAAa;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEG,IAAI,CAACG,WAAe,CAAC,eACjD9B,KAAA,CAAAiB,aAAA;MAAQC,SAAS,EAAC,MAAM;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,QAAc,CAAC,eACxCxB,KAAA,CAAAiB,aAAA;MAAQC,SAAS,EAAC,QAAQ;MAACa,OAAO,EAAEA,CAAA,KAAMjB,UAAU,CAACa,IAAI,CAACZ,EAAE,CAAE;MAAAI,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,QAAc,CACxE,CAAC;EAElB,CAAC,CAAC,gBACDxB,KAAA,CAAAiB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,+BAAiC,CAE5C,CACD,CAAC;AAEd,CAAC;AAED,eAAerB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}